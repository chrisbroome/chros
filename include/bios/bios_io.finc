; Copyright 2011 Christopher Broome
match x, BIOS_IO_FINC
{
define BIOS_IO_FINC

include "bios_int_vid.finc"

macro _putb b {
  push ax
  push bx
    mov ah, BIOS_INT_VID_TTY_OUTPUT
    mov al, b
    mov bx, 0x0007
    int BIOS_INT_VID
  pop bx
  pop ax
}

macro _puthexb b {
}

macro _print_char b {
  mov al, b
  call print_char
}

; prints the null (0) terminated string at ds:[bp+4]
; note that ds is implicitly assumed to be correct
; parameters: [bp+4] word offset of string value to print
puts:
label msg at bp+4
  enter 0, 0 ; set up a stack frame
    pusha ; save all registers
      pushf ; save the flags register
        mov si, [msg] ; offset of string
        cld ; clear the direction flag so that we're looping forwards
      .loop:
        lodsb ; load al with the value of the string
        cmp al, 0
        je .done
        call print_char ; print the character in al
        jmp .loop
      .done:
      popf ;
    popa
  leave
  ret 2

}