; Copyright 2011 Christopher Broome
match x, HW_KB_KB_FINC {
  define HW_KB_KB_FINC

  ; 8042 Keyboard Controller Port Mapping
  KBD_PORT_IN_READ_INPUT_BUFFER    = 0x60
  KBD_PORT_OUT_WRITE_OUTPUT_BUFFER = 0x60
  KBD_PORT_IN_READ_STATUS_REGISTER = 0x64
  KBD_PORT_OUT_SEND_COMMAND        = 0x64

  ; Keyboard status register bits
  KSR_OUTPUT_BUFFER_STATUS         = 0x01 ; 0: buffer empty, do not read.  1: buffer full, ok to read
  KSR_INPUT_BUFFER_STATUS          = 0x02 ; 0: buffer empty, ok to write.  1: buffer full, do not write
  KSR_SYSTEM_FLAG                  = 0x04 ; 0: After power on reset.  1: After successfull completion of the keyboard controllers self-test
  KSR_COMMAND_DATA                 = 0x08 ; 0: Last write was data (via port 0x60).  1: last write was a command (via port 0x64)
  KSR_KEYBOARD_UNLOCKED            = 0x10 ; 0: Locked, 1: Not Locked
  KSR_AUXILIARY_OUTPUT_BUFFER_FULL = 0x20 ; AT: 0: OK Flag.  1: Timeout on transmission from keyboard controller to keyboard.  Could indicate no keyboard present.
  KSR_TIMEOUT                      = 0x40 ; 0: OK flag.  1: Timeout.  PS/2 General Timeout.  AT: Timeout on transsmission from keyboard to keyboard controller.  Possibly parity error (in which case bits 6 and 7 are set)
  KSR_PARITY_ERROR                 = 0x80 ; 0: OK flag, no err.  1: Parity error with last byte

  ; Keyboard Commands (Cmd numbers in hex)

  KBD_CMD_READ_COMMAND_BYTE  = 0x20
  KBD_CMD_WRITE_COMMAND_BYTE = 0x60

  KBD_CMD_PASSWORD_INSTALLED_TEST     = 0xa4
  KBD_CMD_LOAD_SECURITY               = 0xa5
  KBD_CMD_ENABLE_SECURITY             = 0xa6
  KBD_CMD_DISABLE_AUXILIARY_INTERFACE = 0xa7
  KBD_CMD_ENABLE_AUXILIARY_INTERFACE  = 0xa8
  KBD_CMD_AUXILIARY_INTERFACE_TEST    = 0xa9
  KBD_CMD_SELF_TEST                   = 0xaa
  KBD_CMD_KEYBOARD_TEST               = 0xab
  KBD_CMD_DIAGNOSTIC_DUMP             = 0xac
  KBD_CMD_DISABLE_KEYOARD             = 0xad
  KBD_CMD_ENABLE_KEYOARD              = 0xae

  KBD_CMD_READ_INPUT_PORT      = 0xc0
  KBD_CMD_POLL_INPUT_PORT_LOW  = 0xc1
  KBD_CMD_POLL_INPUT_PORT_HIGH = 0xc2

  KBD_CMD_READ_OUTPUT_PORT  = 0xd0
  KBD_CMD_WRITE_OUTPUT_PORT = 0xd1

  KBD_CMD_WRITE_KEYBOARD_OUTPUT_REGISTER  = 0xd2
  KBD_CMD_WRITE_AUXILIARY_OUTPUT_REGISTER = 0xd3
  KBD_CMD_WRITE_AUXILIARY_DEVICE          = 0xd4

  KBD_CMD_ENABLE_A20        = 0xdd
  KBD_CMD_DISABLE_A20       = 0xdf

  KBC_CMD_READ_TEST_INPUTS = 0xe0

  ; Cmd  Description
  ; ---  -----------
  ; 20   Read 8042 Command Byte: current 8042 command byte is placed in port 60h
  ; 60   Write 8042 Command Byte: next data byte written to port 60h is placed in
  ;      the 8042 command register.
  ;      8042 command register:
  ;      Bit Status
  ;      --- ------
  ;        0 1=enable output register full interrupt
  ;        1 should be 0
  ;        2 1=set status register system, 0=clear
  ;        3 1=override keyboard inhibit, 0=allow inhibit
  ;        4 disable keyboard I/O by driving clock line low
  ;        5 disable auxiliary device, drives clock line low
  ;        6 IBM scancode translation 0=AT, 1=PC/XT
  ;        7 reserved, should be 0
  ; A4   Password Installed Test: returned data can be read from port 60h
  ;      FA=password installed, F1=no password
  ; A5   Load Security: bytes written to port 60h will be read until a null (0) 
  ;      is found.
  ; A6   Enable Security: works only if a password is already loaded
  ; A7   Disable Auxiliary Interface: sets Bit 5 of command register stopping 
  ;      auxiliary I/O by driving the clock line low
  ; A8   Enable Auxiliary Interface: clears Bit 5 of command register
  ; A9   Auxiliary Interface Test: clock and data lines are tested; results 
  ;      placed at port 60h are listed below:
  ;      00  no error
  ;      01  keyboard clock line is stuck low
  ;      02  keyboard clock line is stuck high
  ;      03  keyboard data line is stuck low
  ;      04  keyboard data line is stuck high
  ; AA   Self Test: diagnostic result placed at port 60h, 55h=OK
  ; AB   Keyboard Interface Test:	clock and data lines are tested; results placed
  ;      at port 60h are listed above with command A9
  ; AC   Diagnostic Dump: sends 16 bytes of 8042's RAM, current input port state,
  ;      current output port state and 8042 program status word to port 60h in 
  ;      scan-code format.
  ; AD   Disable Keyboard Interface: sets Bit 4 of command register stopping 
  ;      keyboard I/O by driving the clock line low
  ; AE   Enable Keyboard Interface: clears Bit 4 of command register enabling
  ;      keyboard interface.
  ; C0   Read Input Port: data is read from its input port (which is inaccessible
  ;      to the data bus) and written to output register at port 60h;  output 
  ;      register should be empty before call.
  ;      8042 Input Port:
  ;      Bit Status
  ;      --- -----------
  ;      3-0 undefined
  ;        4 1=enable 2nd 256K of motherboard RAM, 0=disable
  ;        5 1=manufacturing jumper not installed, 0=installed
  ;        6 1=primary display is MDA, 0=primary display is CGA
  ;        7 1=keyboard not inhibited, 0=keyboard inhibited
  ;
  ; C1   Poll Input Port Low Bits: Bits 0-3 of port 1 placed in status Bits 4-7
  ; C2   Poll Input Port High Bits: Bits 4-7 of port 1 placed in status Bits 4-7
  ; D0   Read Output Port: data is read from 8042 output port (which is 
  ;      inaccessible to the data bus) and placed in output register the output 
  ;      register should be empty.  (see command D1 below)
  ; D1   Write Output Port: next byte written to port 60h is placed in the 8042
  ;      output port (which is inaccessible to the data bus).
  ;      8042 Output Port:
  ;      Bit Meaning
  ;      --- -------
  ;        0 system reset line
  ;        1 gate A20
  ;        2 undefined
  ;        3 undefined
  ;        4 output buffer full
  ;        5 input buffer empty
  ;        6 keyboard clock (output)
  ;        7 keyboard data (output)
  ;
  ; D2   Write Keyboard Output Register: on PS/2 systems the next data byte 
  ;      written to port 60h input register is written to port 60h output 
  ;      register as if initiated by a device; invokes interrupt if enabled
  ; D3   Write Auxiliary Output Register: on PS/2 systems the next data byte 
  ;      written to port 60h input register is written to port 60h output 
  ;      register as if initiated by a device; invokes interrupt if enabled
  ; D4   Write Auxiliary Device: on PS/2 systems the next data byte written to 
  ;      input register a port at 60h is sent to the auxiliary device
  ; E0   Read Test Inputs: 8042 reads its T0 and T1 inputs; data is placed in 
  ;      output register;  Bit 0 is T0, Bit 1 is T1:
  ;      Test Input Port Bits:
  ;      Bit Meaning
  ;      --- -------
  ;        0 Keyboard Clock
  ;        1 Keyboard Data
  ; Fx   Pulse Output Port: Bits 0-3 of the 8042 output port can be pulsed low 
  ;      for 6 micro seconds;  Bits 0-3 of command indicate which Bits should be
  ;      pulsed; 0=pulse, 1=don't pulse; pulsing Bit 0 results in CPU reset since
  ;      it is connected to system reset line.
}